url: /example/fsm2dot
functionsLanguage: python
outputFormat: graphviz-dot
metamodel: |
    Root:
      cont:
        - FSM
    FSM:
      name:
        - string
      cont:
        - State
        - Transition
      finalState:
        - State
      initialState:
        - State
    Transition:
      input:
        - int
      source:
        - State
      target:
        - State
    State:
      name:
        - string
inputs:
    - name: example1
      input: |
        #OYAML2.1 format
        - FSM:
          # this FSM accepts all bit strings with an odd number of 1's
          - name: Test FSM
          - initialState >: s0
          - finalState >: s1
          - State s0:
            - name: s0
          - State s1:
            - name: s1
          - State s2:
            - name: s2
          - Transition:
            - input: 1
            - source >: s0
            - target >: s1
          - Transition:
            - input: 1
            - source >: s1
            - target >: s0
          - Transition:
            - input: 0
            - source >: s0
            - target >: s0
          - Transition:
            - input: 0
            - source >: s1
            - target >: s1
transformation: |
    # Dot-file content
    FSM.dot:
      header, states, transitions, footer

    # List of states
    FSM.states:
      cont -> State.name

    # List of transitions
    FSM.transitions:
      cont -> Transition.rep

    # Representation of a transition
    Transition.rep:
      source -> State.name, target -> State.name

    FSM.header:
    FSM.footer:
functions: |
    def FSM_dot(header, states, transitions, footer):
        """Dot-file content
        :param header: The "header" of this FSM
        :param states: The "states" of this FSM
        :param transitions: The "transitions" of this FSM
        :param footer: The "footer" of this FSM
        """
        return header + states + transitions + footer

    def FSM_states(cont_State_name):
        """List of states
        :param cont_State_name: The sequence of "name" values of State objects contained in this FSM
        :type  cont_State_name: Array
        """
        return '\n  '.join(cont_State_name) + '\n'

    def FSM_transitions(cont_Transition_rep):
        """List of transitions
        :param cont_Transition_rep: The sequence of "rep" values of Transition objects contained in this FSM
        :type  cont_Transition_rep: Array
        """
        return '\n'.join(r[0] for r in cont_Transition_rep) + '\n'

    def Transition_rep(source_State_name, target_State_name):
        """Representation of a transition
        :param source_State_name: The sequence of "name" values of State objects referred to by attribute "source" in this Transition
        :type  source_State_name: Array
        :param target_State_name: The sequence of "name" values of State objects referred to by attribute "target" in this Transition
        :type  target_State_name: Array
        """
        return [f'  {source_name}--{target_name}' for source_name, target_name in zip(source_State_name, target_State_name)]

    def FSM_header():
        return 'graph {\n  '

    def FSM_footer():
        return '}\n'

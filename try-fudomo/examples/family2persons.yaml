url: /example/family2persons
functionsLanguage: javascript
outputFormat: text
metamodel: |
    Root:
      cont:
        - Family
    Family:
      lastName:
        - string
      cont:
        - Member
      daughters:
        - Member
      father:
        - Member
      mother:
        - Member
      sons:
        - Member
    Member:
      firstName:
        - string
inputs:
    - name: example1
      input: |
        #OYAML3 format
        - Family:
          - lastName: March
          - father >: jim
          - mother >: cindy
          - sons >: brandon, toby
          - daughters >: brandy
          - Member jim:
            - firstName: Jim
          - Member cindy:
            - firstName: Cindy
          - Member brandon:
            - firstName: Brandon
          - Member toby:
            - firstName: Toby
          - Member brandy:
            - firstName: Brandy
transformation: |
    Family.family2persons:
      cont -> Member.isMale, cont -> Member.fullName
    Member.fullName:
      firstName, cont <- Family.lastName
    Member.isMale:
      sons <- Family.center, father <- Family.center
functions: |
    module.exports = {
      Family_family2persons: function(cont_Member_isMale, cont_Member_fullName) {
        let res = '';
        for (const i in cont_Member_isMale) {
          const gender = cont_Member_isMale[i] ? 'M' : 'F';
          const fullName = cont_Member_fullName[i];
          res += fullName + ' (' + gender + ')\n';
        }
        return res;
      },
      Member_fullName: function(firstName, _cont_Family_lastName) {
        return firstName + ' ' + _cont_Family_lastName.values().next().value;
      },
      Member_isMale: function(_sons_Family_center, _father_Family_center) {
        return _sons_Family_center.size > 0 || _father_Family_center.size > 0;
      },
    };
